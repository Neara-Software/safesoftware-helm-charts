{{- range .Values.fmeserver.engines }}
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    safe.k8s.fmeserver.component: engine
    {{- include "fmeserver.common.labels" $ | indent 4 }}
  name: "engine-{{ .name }}"
  {{- with $.Values.annotations.engine.deployment }}
  annotations:
{{ toYaml . | indent 4 }}
  {{- end }}
spec:
  replicas: {{ .engines }}
  selector:
    matchLabels:
      safe.k8s.fmeserver.component: engine
  template:
    metadata:
      labels:
        safe.k8s.fmeserver.component: engine
        {{- include "fmeserver.common.labels" $ | indent 8 }}
      {{- with $.Values.annotations.engine.template }}
      annotations:
{{ toYaml . | indent 8 }}
      {{- end }}
    spec:
      containers:
        - image: {{ template "fmeserver.image.registry" $ }}/{{ template "fmeserver.image.namespace" $ }}/fmeserver-engine:{{ template "fmeserver.image.tag" $ }}
          name: engine
          imagePullPolicy: {{ template "fmeserver.image.pullPolicy" $ }}
          volumeMounts:
            - mountPath: /data/fmeserverdata
              name: fmeserverdata
          env:
            - name: EXTERNALHOSTNAME
              value: {{ $.Values.deployment.hostname }}
            - name: WEBPROTOCOL
              value: {{ template "fmeserver.deployment.protocol" $ }}
            - name: EXTERNALPORT
              value: '443'
            - name: FMESERVERHOSTNAME
              value: engineregistration
            - name: NODENAME
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: FME_ENV_ENGINE_QUEUES
              value: {{ .queues | quote }}
            {{- if .type }}
            - name: ENGINETYPE
              value: {{ .type | quote }}
            {{- end }}
            - name: NODEMANAGED
              value: "false"
            - name: PGSQLHOSTNAME
              value: "{{ template "fmeserver.database.host" $ }}"
            - name: PGSQLPORT
              value: "{{ $.Values.fmeserver.database.port }}"
            - name: PGSQLDATABASENAME
              value: "{{ $.Values.fmeserver.database.name }}"
            - name: PGSQLUSERNAME
              value: "{{ $.Values.fmeserver.database.user }}"
            - name: PGSQLPASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "fmeserver.database.secretName" $ }}
                  key: {{ $.Values.fmeserver.database.passwordSecretKey }}
          {{- if .resources }}
          resources:
{{ toYaml .resources | indent 12 }}
          {{- end }}
      restartPolicy: Always
      volumes:
        - name: fmeserverdata
          persistentVolumeClaim:
            claimName: {{ template "fmeserver.storage.data.claimName" $ }}
      affinity:
        {{- include "fmeserver.deployment.dataVolumeAffinity" $ | indent 8 }}
      {{- if .affinity }}
{{ toYaml .affinity | indent 8 }}
      {{- end }}
      {{- if .nodeSelector }}
      nodeSelector:
{{ toYaml .nodeSelector | indent 8 }}
      {{- end }}
      {{- if .tolerations }}
      tolerations:
{{ toYaml .tolerations | indent 8 }}
      {{- end }}
---
{{- end }}
